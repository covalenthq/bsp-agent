version: "3"

services:
  ipfs-pinner:
    image: "us-docker.pkg.dev/covalent-project/network/ipfs-pinner:stable"
    volumes:
      - ~/.ipfs:/root/.ipfs/
    container_name: ipfs-pinner
    restart: on-failure
    entrypoint: |
      /bin/bash -l -c "
        touch proof_out_hex.txt;
        chmod +x proof_out_hex.txt;
        echo "$PROOF_OUT_HEX" > proof_out_hex.txt;
        xxd -r -p proof_out_hex.txt > proof_from_hex.out;
        chmod +x proof_from_hex.out;
        mv ./proof_from_hex.out /root/.ipfs/proof_from_hex.out;
        ./ipfs-server -port 3001 -w3-agent-key $W3_AGENT_KEY -w3-delegation-file $W3_DELEGATION_FILE;"
    environment:
      - W3_AGENT_KEY=${W3_AGENT_KEY}
      - W3_DELEGATION_FILE=${W3_DELEGATION_FILE}
      - PROOF_OUT_HEX=${PROOF_OUT_HEX}
    networks:
      - cqt-net
    ports:
      - "4001:4001"
      - "3001:3001"

  redis:
    image: redis:alpine
    container_name: redis-srv
    restart: always
    expose:
      - 6379
    volumes:
      - ./data/redis:/data
      - ./data/redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - cqt-net
    entrypoint: redis-server #/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander-web
    hostname: redis-commander
    restart: always
    depends_on:
      - redis
    environment:
      - REDIS_HOSTS=local:redis:6379
    networks:
      - cqt-net
    ports:
      - "8081:8081"

  covenet:
    image: us-docker.pkg.dev/covalent-project/network/covenet:pre
    container_name: covenet-node
    restart: always
    entrypoint: >
      /bin/bash -l -c "
        ./covenetd start --home /apps/data/.covenet/;"
    networks:
      - cqt-net
    ports:
      - "26657:26657"
      - "26656:26656"
      - "6060:6060"
      - "9090:9090"
      - "1317:1317"

  agent:
    image: "us-docker.pkg.dev/covalent-project/network/bsp-agent:pre"
    container_name: bsp-agent
    # links:
    #   - "cqt-virtnet:proof-chain"
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      covenet:
        condition: service_started
    volumes:
      - /Users/pranay/.config/gcloud:/app/gcloud
    entrypoint: >
      /bin/bash -l -c "
        echo Waiting for Covenet to be deployed...;
        # while ! nc -v -l -k -p 8008;
        # do
        sleep 10;
        # done;
        # echo proof-chain contracts deployed!;
        ./bsp-agent --redis-url=redis://username:@redis:6379/0?topic=replication#replicate --avro-codec-path=./codec/block-ethereum.avsc --binary-file-path=./bin/block-ethereum/  --block-divisor=3  --log-folder ./logs/ --metrics --metrics.port 6063 --metrics.addr 0.0.0.0 --proof-chain-address=0xEa2ff902dbeEECcc828757B881b343F9316752e5 --consumer-timeout=100000 --ipfs-pinner-server="http://ipfs-pinner:3001/";
        exit 0;"
    environment:
      - MB_PRIVATE_KEY=${PRIVATE_KEY}
      - MB_RPC_URL=${RPC_URL}
      - BLOCKCHAIN=${BLOCKCHAIN}
      - COVENET_PRIVATE_KEY=${COVENET_PRIVATE_KEY}
      - COVENET_GRPC_URL=${COVENET_GRPC_URL}
    networks:
      - cqt-net
    ports:
      - "8080:8080"

networks:
  cqt-net:
